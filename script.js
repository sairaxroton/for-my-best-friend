document.addEventListener('DOMContentLoaded', function() {

    // Page Elements
    const pages = {
        page1: document.getElementById('page1'),
        page2: document.getElementById('page2'),
        page3: document.getElementById('page3'),
        mainPage: document.getElementById('mainPage'),
        congratsPage: document.getElementById('congratsPage'),
        theEndPage: document.getElementById('theEndPage')
    };

    // Buttons
    const buttons = {
        goAheadBtn: document.getElementById('goAheadBtn'),
        loveYouTooBtn: document.getElementById('loveYouTooBtn'),
        nextBtn: document.getElementById('nextBtn'),
        saveSignatureBtn: document.getElementById('saveSignatureBtn')
    };
    
    // Other Elements
    const choiceButtons = document.querySelectorAll('.choice-btn');
    const messageElement = document.getElementById('message');
    const proposalSection = document.getElementById('proposalSection');

    let currentMessageIndex = 0;
    
    // --- Updated Messages with Emojis ---
    const messages = [
        { text: "‡¶§‡ßÅ‡¶á ‡¶∂‡¶æ‡¶≤‡¶æ ‡¶Ü‡¶∏‡ßç‡¶§ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶ï‡ßÅ‡¶§‡ßç‡¶§‡¶æ... üê∂ (‡¶§‡¶¨‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶∏‡¶¨‡¶ö‡ßá‡¶Ø‡¶º‡ßá ‡¶Ü‡¶¶‡¶∞‡ßá‡¶∞ ‡¶ï‡ßÅ‡¶§‡ßç‡¶§‡¶æ üíñ)", btnText: "‡¶π‡¶æ‡¶π‡¶æ! ‡¶è‡¶∞‡¶™‡¶∞?" },
        { text: "‡¶§‡¶æ‡¶∏‡¶®‡¶ø‡¶Æ ‡¶®‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶Ö‡¶∞‡ßç‡¶• ‡¶Ø‡ßá '‡¶∏‡ßç‡¶¨‡¶∞‡ßç‡¶ó‡ßá‡¶∞ ‡¶ù‡¶∞‡ßç‡¶£‡¶æ' ‡¶è‡¶ü‡¶æ ‡¶ú‡¶æ‡¶®‡¶§‡¶ø‡¶∏? ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶õ‡ßá ‡¶§‡ßÅ‡¶á ‡¶§‡ßã ‡¶ü‡¶æ‡¶∞‡ßç‡¶ï‡¶ø ‡¶Æ‡ßÅ‡¶∞‡¶ó‡¶ø! ü¶ÉüòÇ", btnText: "‡¶∏‡¶ø‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∏‡¶≤‡¶ø? ü§£" },
        { text: "‡¶§‡ßÅ‡¶á ‡¶¶‡ßÅ‡¶®‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡ßØ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶Ö‡¶¶‡ßç‡¶≠‡ßÅ‡¶§ ‡¶™‡ßç‡¶∞‡¶æ‡¶£‡ßÄ ‡¶π‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø‡¶§‡¶æ ‡¶∞‡¶æ‡¶ñ‡¶ø‡¶∏! üëΩ‚ú®", btnText: "‡¶Ü‡¶Æ‡¶ø ‡¶Ö‡¶¶‡ßç‡¶≠‡ßÅ‡¶§? ‡¶¶‡ßá‡¶ñ ‡¶è‡¶∞‡¶™‡¶∞ ‡¶ï‡ßÄ ‡¶¨‡¶≤‡¶ø‡¶∏!" },
        { text: "‡¶Ø‡¶§ ‡¶Ø‡¶æ‡¶á ‡¶¨‡¶≤‡¶ø ‡¶®‡¶æ ‡¶ï‡ßá‡¶®, ‡¶∏‡¶§‡ßç‡¶Ø‡¶ø‡¶ü‡¶æ ‡¶π‡¶≤‡ßã... ‡¶§‡ßÅ‡¶á ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ú‡ßÄ‡¶¨‡¶®‡ßá ‡¶è‡¶§ ‡¶∞‡¶ô ‡¶•‡¶æ‡¶ï‡¶§‡ßã ‡¶®‡¶æ‡•§ üé®‚ù§Ô∏è", btnText: "‡¶Ü‡¶π‡¶æ‡¶∞‡ßá... ü•∫" },
        { text: "‡¶§‡ßã‡¶∞ ‡¶ï‡¶æ‡¶∞‡¶£‡ßá‡¶á ‡¶§‡ßã ‡¶Ü‡¶Æ‡¶ø ‡¶ï‡¶æ‡¶â‡¶ï‡ßá ‡¶Æ‡¶®‡ßá‡¶∞ ‡¶∏‡ßÅ‡¶ñ‡ßá ‡¶ó‡¶æ‡¶≤‡¶ø ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶Æ‡¶® ‡¶π‡¶æ‡¶≤‡¶ï‡¶æ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø! ‡¶§‡ßÅ‡¶á ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ó‡¶æ‡¶≤‡¶ø ‡¶¨‡ßç‡¶Ø‡¶æ‡¶Ç‡¶ï! üè¶ü§¨", btnText: "‡¶§‡ßã‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∏‡¶¨‡¶á ‡¶™‡¶æ‡¶∞‡¶ø ‡¶¨‡¶®‡ßç‡¶ß‡ßÅ! üòâ" },
        { text: "‡¶§‡ßÅ‡¶á ‡¶Ü‡¶∏‡¶≤‡ßá‡¶á ‡¶¨‡ßá‡¶∏‡ßç‡¶ü ‡¶è‡¶ï‡¶ü‡¶æ ‡¶ú‡¶ø‡¶®‡¶ø‡¶∏ ‡¶≠‡¶æ‡¶á... ‚ú®ü´Ç", btnText: "I know! üòé" },
        { text: "‡¶§‡ßã‡¶∞ ‡¶Ü‡¶¨‡ßç‡¶¨‡ßÅ‡¶ï‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶™‡¶ï‡ßç‡¶∑ ‡¶•‡ßá‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶æ ‡¶∏‡ßç‡¶™‡ßá‡¶∂‡¶æ‡¶≤ ‡¶•‡ßç‡¶Ø‡¶æ‡¶Ç‡¶ï‡¶∏ ‡¶¨‡¶≤‡¶ø‡¶∏... üíê ‡¶â‡¶®‡¶ø ‡¶§‡ßã‡¶ï‡ßá ‡¶™‡¶Ø‡¶º‡¶¶‡¶æ ‡¶®‡¶æ ‡¶ï‡¶∞‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶ø ‡¶è‡¶Æ‡¶® ‡¶è‡¶ï‡¶ü‡¶æ ‡¶¨‡¶®‡ßç‡¶ß‡ßÅ ‡¶ï‡ßã‡¶•‡¶æ‡¶Ø‡¶º ‡¶™‡ßá‡¶§‡¶æ‡¶Æ? üò≠üôè", btnText: "‡¶Ü‡¶ô‡ßç‡¶ï‡ßá‡¶≤ Rocks! ü§ò" },
        { text: "‡¶∂‡ßã‡¶®... ‡¶è‡¶ï‡¶¶‡¶ø‡¶® ‡¶∞‡¶§‡¶® ‡¶Ö‡¶®‡ßá‡¶ï ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶¨‡¶≤ ‡¶π‡¶¨‡ßá ‡¶Ü‡¶∞ ‡¶∏‡ßá‡¶á‡¶¶‡¶ø‡¶® ‡¶§‡¶æ‡¶∏‡¶®‡¶ø‡¶Æ‡¶ï‡ßá ‡¶¨‡¶ø‡¶Ø‡¶º‡ßá ‡¶ï‡¶∞‡ßá ‡¶´‡ßá‡¶≤‡¶¨‡ßá! üòéüôàüíç", btnText: "‡¶∏‡¶§‡ßç‡¶Ø‡¶ø ‡¶¨‡¶≤‡¶õ‡¶ø‡¶∏? üëÄ" }
    ];

    function showPage(pageId) {
        Object.values(pages).forEach(page => page.classList.add('hidden'));
        pages[pageId].classList.remove('hidden');
    }

    function updateMessage() {
        if (currentMessageIndex < messages.length) {
            messageElement.innerHTML = messages[currentMessageIndex].text;
            buttons.nextBtn.textContent = messages[currentMessageIndex].btnText;
            currentMessageIndex++;
        } else {
            messageElement.classList.add('hidden');
            buttons.nextBtn.classList.add('hidden');
            proposalSection.classList.remove('hidden');
        }
    }

    buttons.goAheadBtn.addEventListener('click', () => {
        showPage('page2');
        setTimeout(() => {
            showPage('page3');
        }, 10000); // 10 seconds timeout
    });

    buttons.loveYouTooBtn.addEventListener('click', () => {
        showPage('mainPage');
        updateMessage();
    });

    buttons.nextBtn.addEventListener('click', () => {
        updateMessage();
    });

    choiceButtons.forEach(button => {
        button.addEventListener('click', () => {
            showPage('congratsPage');
            resizeCanvas(); // Ensure canvas is resized when the page is shown
        });
    });

    // --- Signature Pad Logic ---
    const canvas = document.getElementById('signature-pad');
    const signaturePad = new SignaturePad(canvas, {
        backgroundColor: 'rgb(255, 255, 255)'
    });

    function resizeCanvas() {
        const ratio =  Math.max(window.devicePixelRatio || 1, 1);
        canvas.width = canvas.offsetWidth * ratio;
        canvas.height = canvas.offsetHeight * ratio;
        canvas.getContext("2d").scale(ratio, ratio);
        signaturePad.clear(); // Resets the signature pad
    }

    // Resize canvas on window resize and initial load
    window.addEventListener("resize", resizeCanvas);
    
    buttons.saveSignatureBtn.addEventListener('click', () => {
        if (signaturePad.isEmpty()) {
            alert("‡¶Ü‡¶ó‡ßá ‡¶∏‡ßç‡¶¨‡¶æ‡¶ï‡ßç‡¶∑‡¶∞ ‡¶ï‡¶∞, ‡¶ö‡¶æ‡¶≤‡¶æ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶ø‡¶∏ ‡¶®‡¶æ! üòâ");
        } else {
            showPage('theEndPage');
        }
    });

    // Initialize the first page
    showPage('page1');
});